library(knitr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(plyr)
library(reshape2)
library(ggplot2)
library(gridExtra)
library(pander)
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
rm(list=ls() )
data.path <-"original-data"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
data.path <-"original-data"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
EA2 <- read.csv(file.path(data.path,"Equine_assessment_form_2-170914163239558.csv"))
OR1 <- read.csv(file.path(data.path,"Owner_donkey_records_1-170914163240433.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
DL1 <- read.csv(file.path(data.path,"Donkey_lesion_form-170914163240011.csv"))
#turn into a tible
#EA1 <- tbl_df(EA1)
#Turn into a df
#EA1 <- as.data.frame(EA1)
str(EA1)
glimpse(EA2)
?separate
separate(EA2, Lesion.form, LID1,LID2, LID3, LID4, sep = ",")
separate(EA2, Lesion.form, c("LID1","LID2", "LID3", "LID4") sep = ",")
separate(EA2, Lesion.form, c("LID1","LID2", "LID3", "LID4"), sep = ",")
EA2 <- tbl_df(EA2)
str(EA2)
EA2.1 <- separate(EA2, Lesion.form, c("LID1","LID2", "LID3", "LID4"), sep = ",")
str(EA2.1)
table(EA2.1$LID4)
levels(EA2.1$LID4)
class(EA2.1$LID4)
map.path <- "maps"
IND_3 <- readShapePoly(file.path("maps/india_admin/IND_adm3.shp"))
library(maptools)
IND_3 <- readShapePoly(file.path("maps/india_admin/IND_adm3.shp"))
EA_points <-SpatialPoints(cbind(EA_join$Long, EA_join$Lat))
str(EA1)
EA1 <- EA1[!duplicated(EA1$AnswerCode), ]
# Chunk 1: setup
library(knitr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(plyr)
library(reshape2)
library(ggplot2)
library(gridExtra)
library(pander)
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
rm(list=ls() )
# Chunk 2: importdatasets
data.path <-"original-data"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
EA2 <- read.csv(file.path(data.path,"Equine_assessment_form_2-170914163239558.csv"))
OR1 <- read.csv(file.path(data.path,"Owner_donkey_records_1-170914163240433.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
LE1 <- read.csv(file.path(data.path,"Donkey_lesion_form-170914163240011.csv"))
#turn into a tible
#EA1 <- tbl_df(EA1)
EA2 <- tbl_df(EA2)
#Turn into a df
#EA1 <- as.data.frame(EA1)
dup <- distinct(EA1, AnswerCode, .keep_all = TRUE)
dup1 <- distinct(EA2, AnswerCode, .keep_all = TRUE)
EA1 <- EA1[!duplicated(EA1$AnswerCode), ]
EA2 <- EA2[!duplicated(EA2$AnswerCode), ]
OR1 <- OR1[!duplicated(OR1$AnswerCode), ]
DC1 <- DC1[!duplicated(DC1$AnswerCode), ]
LE1 <- LE1[!duplicated(LE1$AnswerCode), ]
head(EA1)
View(EA1)
View(EA2)
View(OR1)
View(DC1)
View(LE1)
table(OR1$Date.Created)
table(DC1$Date.Created)
names(DC1)
names(OR1)
which(names(DC1) %in% names(OR1))
which(names(DC1) %in% names(OR1)==FALSE)
(names(DC1)[which(names(DC1) %in% names(OR1)==FALSE)]
names(DC1)[which(names(DC1) %in% names(OR1)==FALSE)]
which(names(EA1) %in% names(EA2)==FALSE)
length(names(EA1))
length(names(EA2))
?rbind.fill
View(plyr::rbind.fill(EA1, EA2))
length(unique(c(names(EA1, EA2))))
length(unique(c(names(EA1, names(EA2)))))
length(unique(c(names(EA1), names(EA2))))
dim(plyr::rbind.fill(EA1, EA2))
nrow(EA)
nrow(EA1)
nrow(EA2)
202+380
OR <- plyr::rbind.fill(DC1,OR1) # contains all columns, even ones who don't match
nrow(OR)
nrow(OR1)
nrow(DC1)
length(unique(OR$ownerID.number))
length(unique(OR1$ownerID.number))
length(unique(DC1$ownerID.number))
length(duplicated(OR1$ownerID.number))
length(which(duplicated(OR1$ownerID.number)))
length(which(duplicated(DC1$ownerID.number)))
which(unique(OR1$ownerID.number) %in% unique(DC1$ownerID.number))
unique(DC1$ownerID.number)
length(which(duplicated(EA1$AnswerCode)))
length(which(duplicated(EA2$AnswerCode)))
EA2$AnswerCode
table(LE1$AnswerCode)
EA <- plyr::rbind.fill(EA1, EA2) # contains all columns, even ones who don't match
which(EA$AnswerCode %in% LE1$ParentCode)
LE1$ParentCode
which(duplicated(OR1$ownerID.number))
OR1$ownerID.number[(which(duplicated(OR1$ownerID.number)))]
OR1$ownerID.number
DC1$ownerID.number[(which(duplicated(DC1$ownerID.number)))]
subset(DC1, ownerID %in% DC1$ownerID.number[(which(duplicated(DC1$ownerID.number)))])
EA$ownerIDdata <- paste(EA$ownerID, EA$Date.Created)
which(EA$AnswerCode %in% LE1$ParentCode)
OR$ownerID
OR$ownerIDdate <- paste(OR$ownerID.number, OR$Date.Created)
length(which(duplicated(OR$ownerIDdate)))
subset(DC1, ownerID.number %in% DC1$ownerID.number[(which(duplicated(DC1$ownerID.number)))])
subset(OR, ownerID.number %in% OR$ownerID.number[(which(duplicated(OR$ownerID.number)))])
length(which(duplicated(OR$ownerIDdate)))
which(EA$AnswerCode %in% LE1$ParentCode)
names(EA)
table(EA$ownerID)
table(EA$ownerIDdata)
table(LE1$ParentCode)
table(LE1$AnswerCode)
table(LE1$ParentID)
table(LE1$ParentCode)
write.csv(ORduplicates, "owner_duplicates.csv")
ORduplicates<-subset(OR, ownerID.number %in% OR$ownerID.number[(which(duplicated(OR$ownerID.number)))])
write.csv(ORduplicates, "owner_duplicates.csv")
table(EA$AnswerCode)
table(LE1$AnswerCode)
table(EA$AnswerCode)
which(EA$AnswerCode %in% LE1$AnswerCode)
EA$AnswerCode[1]
LE1$AnswerCode[1]
data.path <-"original-data2"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
EA2 <- read.csv(file.path(data.path,"Equine_assessment_form_2-170914163239558.csv"))
OR1 <- read.csv(file.path(data.path,"Owner_donkey_records_1-170914163240433.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
LE1 <- read.csv(file.path(data.path,"Donkey_lesion_form-170914163240011.csv"))
data.path <-"original-data"
data.path2 <-"original-data2"
EA1 <- read.csv(file.path(data.path2,"Equine_assessment_form_1-170915171729410.csv"))
EA2 <- read.csv(file.path(data.path2,"Equine_assessment_form_2-170915171726113.csv"))
OR1 <- read.csv(file.path(data.path2,"Owner_donkey_records_1-170915171728082.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
LE1 <- read.csv(file.path(data.path2,"Donkey_lesion_form-170915171727144 - Parent ID.csv"))
EA1 <- read.csv(file.path(data.path2,"Equine_assessment_form_1-170915171729410.csv"))
# Chunk 1: setup
library(knitr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(plyr)
library(reshape2)
library(ggplot2)
library(gridExtra)
library(pander)
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
rm(list=ls() )
# Chunk 2: importdatasets
data.path <-"original-data"
data.path2 <-"original-data2"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
EA2 <- read.csv(file.path(data.path,"Equine_assessment_form_2-170914163239558.csv"))
OR1 <- read.csv(file.path(data.path,"Owner_donkey_records_1-170914163240433.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
LE1 <- read.csv(file.path(data.path2,"Donkey_lesion_form-170915171727144 - Parent ID.csv"))
#turn into a tible
#EA1 <- tbl_df(EA1)
EA2 <- tbl_df(EA2)
#Turn into a df
#EA1 <- as.data.frame(EA1)
# Chunk 3: data cleaning vacc15
#remove duplicates (there turn out not to be any duiplicates here)
dup <- distinct(EA1, AnswerCode, .keep_all = TRUE)
dup1 <- distinct(EA2, AnswerCode, .keep_all = TRUE)
EA1 <- EA1[!duplicated(EA1$AnswerCode), ]
EA2 <- EA2[!duplicated(EA2$AnswerCode), ]
OR1 <- OR1[!duplicated(OR1$AnswerCode), ]
DC1 <- DC1[!duplicated(DC1$AnswerCode), ]
LE1 <- LE1[!duplicated(LE1$AnswerCode), ]
length(which(duplicated(EA1$AnswerCode)))
EA <- plyr::rbind.fill(EA1, EA2) # contains all columns, even ones who don't match
which(EA$AnswerCode %in% LE1$ParentCode)
which(EA$AnswerCode %in% LE1$ParentCode==FALSE)
table( LE1$ParentCode %in% EA$AnswerCode)
LE1$ParentCode[which(LE1$ParentCode %in% EA$AnswerCode)]
LE1$ParentCode[which(LE1$ParentCode %in% EA$AnswerCode)==FALSE]
LE1$ParentCode[which(LE1$ParentCode %in% EA$AnswerCode==FALSE)]
which(LE1$ParentCode %in% EA$AnswerCode==FALSE)
?left_join
OR <- plyr::rbind.fill(DC1,OR1) # contains all columns, even ones who don't match
which(OR$ownerID.number %in% EA$ownerID==FALSE)
which(EA$ownerID %in% OR$ownerID.number==FALSE)
## join EA dataset with OR dataset keeping all rows of EA
EAOR <- left_join(EA, OR,by = c("ownerID"="ownerID.number"))
## dataset containing all lesions joined with matching animal data and owner data
LE1EAOR <- left_join(LE1, EAOR,by = c("ParentCode"="AnswerCode"))
EAOR <- left_join(EA, OR,by = c("ownerID"="ownerID.number"))
table(EA$AnswerCode %in% OR$AnswerCode)
table(LE1$ParentCode %in% OR$AnswerCode)
## join EA dataset with OR dataset keeping all rows of EA
EAOR <- left_join(EA, OR,by = c("ownerID"="ownerID.number"))
## dataset containing all lesions joined with matching animal data and owner data
LE1EAOR <- left_join(LE1, EAOR,by = c("ParentCode"="AnswerCode.x"))
write.csv(ORduplicates, "extracted_data/owner_duplicates.csv")
# Chunk 1: setup
library(knitr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(plyr)
library(reshape2)
library(ggplot2)
library(gridExtra)
library(pander)
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
rm(list=ls() )
# Chunk 2: importdatasets
data.path <-"original-data"
data.path2 <-"original-data2"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
EA2 <- read.csv(file.path(data.path,"Equine_assessment_form_2-170914163239558.csv"))
OR1 <- read.csv(file.path(data.path,"Owner_donkey_records_1-170914163240433.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
LE1 <- read.csv(file.path(data.path2,"Donkey_lesion_form-170915171727144 - Parent ID.csv"))
#turn into a tible
#EA1 <- tbl_df(EA1)
EA2 <- tbl_df(EA2)
#Turn into a df
#EA1 <- as.data.frame(EA1)
# Chunk 3: data cleaning vacc15
#remove duplicates (there turn out not to be any duiplicates here)
dup <- distinct(EA1, AnswerCode, .keep_all = TRUE)
dup1 <- distinct(EA2, AnswerCode, .keep_all = TRUE)
EA1 <- EA1[!duplicated(EA1$AnswerCode), ]
EA2 <- EA2[!duplicated(EA2$AnswerCode), ]
OR1 <- OR1[!duplicated(OR1$AnswerCode), ]
DC1 <- DC1[!duplicated(DC1$AnswerCode), ]
LE1 <- LE1[!duplicated(LE1$AnswerCode), ]
# Chunk 4: joining EA1 and EA2
## number of duplicate IDs in each dataset
length(which(duplicated(EA1$AnswerCode))) #0
length(which(duplicated(EA2$AnswerCode))) #0
##EA1 and EA2 share a number of common columns - need to join the rows based on common columns
EA <- plyr::rbind.fill(EA1, EA2) # contains all columns, even ones who don't match
which(LE1$ParentCode %in% EA$AnswerCode==FALSE) # tells you which rows don't have a matching EA$AnswerCode
# Chunk 5: joining DC1 and OR2
## number of duplicate IDs in each dataset
length(which(duplicated(OR1$ownerID.number))) #1
OR1$ownerID.number[(which(duplicated(OR1$ownerID.number)))] # these are: ownerID 63
length(which(duplicated(DC1$ownerID.number))) #2
DC1$ownerID.number[(which(duplicated(DC1$ownerID.number)))] # these are: ownerID 5, 32
## number of IDs that appear in both datasets
which(unique(OR1$ownerID.number) %in% unique(DC1$ownerID.number)) # 0
##DC1 and OR1 share a number of common columns - need to join the rows based on common columns
OR <- plyr::rbind.fill(DC1,OR1) # contains all columns, even ones who don't match
ORduplicates<-subset(OR, ownerID.number %in% OR$ownerID.number[(which(duplicated(OR$ownerID.number)))])
write.csv(ORduplicates, "extracted_data/owner_duplicates.csv")
write.csv(ORduplicates, "extracted_data/owner_duplicates.csv")
# Chunk 1: setup
library(knitr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(plyr)
library(reshape2)
library(ggplot2)
library(gridExtra)
library(pander)
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
rm(list=ls() )
# Chunk 2: importdatasets
data.path <-"original-data"
data.path2 <-"original-data2"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
EA2 <- read.csv(file.path(data.path,"Equine_assessment_form_2-170914163239558.csv"))
OR1 <- read.csv(file.path(data.path,"Owner_donkey_records_1-170914163240433.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
LE1 <- read.csv(file.path(data.path2,"Donkey_lesion_form-170915171727144 - Parent ID.csv"))
#turn into a tible
#EA1 <- tbl_df(EA1)
EA2 <- tbl_df(EA2)
#Turn into a df
#EA1 <- as.data.frame(EA1)
# Chunk 3: data cleaning vacc15
#remove duplicates (there turn out not to be any duiplicates here)
dup <- distinct(EA1, AnswerCode, .keep_all = TRUE)
dup1 <- distinct(EA2, AnswerCode, .keep_all = TRUE)
EA1 <- EA1[!duplicated(EA1$AnswerCode), ]
EA2 <- EA2[!duplicated(EA2$AnswerCode), ]
OR1 <- OR1[!duplicated(OR1$AnswerCode), ]
DC1 <- DC1[!duplicated(DC1$AnswerCode), ]
LE1 <- LE1[!duplicated(LE1$AnswerCode), ]
# Chunk 4: joining EA1 and EA2
## number of duplicate IDs in each dataset
length(which(duplicated(EA1$AnswerCode))) #0
length(which(duplicated(EA2$AnswerCode))) #0
##EA1 and EA2 share a number of common columns - need to join the rows based on common columns
EA <- plyr::rbind.fill(EA1, EA2) # contains all columns, even ones who don't match
which(LE1$ParentCode %in% EA$AnswerCode==FALSE) # tells you which rows don't have a matching EA$AnswerCode
# Chunk 5: joining DC1 and OR2
## number of duplicate IDs in each dataset
length(which(duplicated(OR1$ownerID.number))) #1
OR1$ownerID.number[(which(duplicated(OR1$ownerID.number)))] # these are: ownerID 63
length(which(duplicated(DC1$ownerID.number))) #2
DC1$ownerID.number[(which(duplicated(DC1$ownerID.number)))] # these are: ownerID 5, 32
## number of IDs that appear in both datasets
which(unique(OR1$ownerID.number) %in% unique(DC1$ownerID.number)) # 0
##DC1 and OR1 share a number of common columns - need to join the rows based on common columns
OR <- plyr::rbind.fill(DC1,OR1) # contains all columns, even ones who don't match
ORduplicates<-subset(OR, ownerID.number %in% OR$ownerID.number[(which(duplicated(OR$ownerID.number)))])
write.csv(ORduplicates, "extracted_data/owner_duplicates.csv")
# Chunk 6: linking Parent form to Daughter form
# The cascade of forms is like this
# OWNER RECORDS = DC1 (03/10/17 to 28/04/17) + OR1 (23/05/17 to 25/07/17)
# EQUINE RECORDS = EA1 (03/10/17 to 28/04/17) + (23/05/17 to 25/07/17)
# LESION RECORDS = LE1 (03/10/17 to 25/07/17)
#DC1
# EA1 and EA2 are parent forms - they contain
# Chunk 7: import maps
### get data from shapefile
library(maptools)
IND_3 <- readShapePoly(file.path("maps/india_admin/IND_adm3.shp"))
EA_points <-SpatialPoints(cbind(EA_join$Long, EA_join$Lat))
taluka_overlay <-over(EA_points, IND_3)
EA_join$Name <- droplevels(taluka_overlay$Name)
EA_join$Taluka <- droplevels(panchayatsOverlay$Taluka)
EAOR <- left_join(EA, OR,by = c("ownerID"="ownerID.number"))
## dataset containing all lesions joined with matching animal data and owner data
LE1EAOR <- left_join(LE1, EAOR,by = c("ParentCode"="AnswerCode.x"))
## save dataframe
write.csv("joined_data/extracted_joineddata.csv")
write.csv(LE1EAOR, "joined_data/extracted_joineddata.csv")
write.csv(LE1EAOR, "extracted_data/extracted_joineddata.csv")
# Chunk 1: setup
library(knitr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
library(plyr)
library(reshape2)
library(ggplot2)
library(gridExtra)
library(pander)
library(dplyr)
library(lubridate)
library(tidyr)
library(data.table)
rm(list=ls() )
# Chunk 2: importdatasets
data.path <-"original-data"
data.path2 <-"original-data2"
EA1 <- read.csv(file.path(data.path,"Equine_assessment_form_1-170914163241042.csv"))
EA2 <- read.csv(file.path(data.path,"Equine_assessment_form_2-170914163239558.csv"))
OR1 <- read.csv(file.path(data.path,"Owner_donkey_records_1-170914163240433.csv"))
DC1 <- read.csv(file.path(data.path,"Donkey_clinic_records_1-170914163244183.csv"))
LE1 <- read.csv(file.path(data.path2,"Donkey_lesion_form-170915171727144 - Parent ID.csv"))
#turn into a tible
#EA1 <- tbl_df(EA1)
EA2 <- tbl_df(EA2)
#Turn into a df
#EA1 <- as.data.frame(EA1)
# Chunk 3: data cleaning vacc15
#remove duplicates (there turn out not to be any duiplicates here)
dup <- distinct(EA1, AnswerCode, .keep_all = TRUE)
dup1 <- distinct(EA2, AnswerCode, .keep_all = TRUE)
EA1 <- EA1[!duplicated(EA1$AnswerCode), ]
EA2 <- EA2[!duplicated(EA2$AnswerCode), ]
OR1 <- OR1[!duplicated(OR1$AnswerCode), ]
DC1 <- DC1[!duplicated(DC1$AnswerCode), ]
LE1 <- LE1[!duplicated(LE1$AnswerCode), ]
# Chunk 4: joining EA1 and EA2
## number of duplicate IDs in each dataset
length(which(duplicated(EA1$AnswerCode))) #0
length(which(duplicated(EA2$AnswerCode))) #0
##EA1 and EA2 share a number of common columns - need to join the rows based on common columns
EA <- plyr::rbind.fill(EA1, EA2) # contains all columns, even ones who don't match
which(LE1$ParentCode %in% EA$AnswerCode==FALSE) # tells you which rows don't have a matching EA$AnswerCode
# Chunk 5: joining DC1 and OR2
## number of duplicate IDs in each dataset
length(which(duplicated(OR1$ownerID.number))) #1
OR1$ownerID.number[(which(duplicated(OR1$ownerID.number)))] # these are: ownerID 63
length(which(duplicated(DC1$ownerID.number))) #2
DC1$ownerID.number[(which(duplicated(DC1$ownerID.number)))] # these are: ownerID 5, 32
## number of IDs that appear in both datasets
which(unique(OR1$ownerID.number) %in% unique(DC1$ownerID.number)) # 0
##DC1 and OR1 share a number of common columns - need to join the rows based on common columns
OR <- plyr::rbind.fill(DC1,OR1) # contains all columns, even ones who don't match
ORduplicates<-subset(OR, ownerID.number %in% OR$ownerID.number[(which(duplicated(OR$ownerID.number)))])
write.csv(ORduplicates, "extracted_data/owner_duplicates.csv")
# Chunk 6: linking Parent form to Daughter form
# The cascade of forms is like this
# OWNER RECORDS = DC1 (03/10/17 to 28/04/17) + OR1 (23/05/17 to 25/07/17)
# EQUINE RECORDS = EA1 (03/10/17 to 28/04/17) + (23/05/17 to 25/07/17)
# LESION RECORDS = LE1 (03/10/17 to 25/07/17)
#DC1
# EA1 and EA2 are parent forms - they contain
# Chunk 7: import maps
### get data from shapefile
library(maptools)
IND_3 <- readShapePoly(file.path("maps/india_admin/IND_adm3.shp"))
EA_points <-SpatialPoints(cbind(EA_join$Long, EA_join$Lat))
taluka_overlay <-over(EA_points, IND_3)
EA_join$Name <- droplevels(taluka_overlay$Name)
EA_join$Taluka <- droplevels(panchayatsOverlay$Taluka)
EAOR <- left_join(EA, OR,by = c("ownerID"="ownerID.number"))
## dataset containing all lesions joined with matching animal data and owner data
LE1EAOR <- left_join(LE1, EAOR,by = c("ParentCode"="AnswerCode.x"))
## save dataframe
write.csv(LE1EAOR, "extracted_data/lesions_joineddata.csv")
